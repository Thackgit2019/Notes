Chapter 2:

etc/passwd shows guid but does not show passwd

etc/shadow can show password but might be encrypted?

sudo adduser - gives fields to work with and adds the <username>
sudo passwd <username> - changes password of a user
sudo su - <username> - switches accounts, use exit to go back to prev
sudo groupadd <name> - adds group <name>
sudo usermod -g <groupname> <username> - switches primary group with -g option -a for append
sudo gpasswd -d <username> <grouptoremove> - remove a user from a group
sudo passwd -l <username> - lock a user account -u to unlock
sudo chage -l <username> - views when  password expires etc.
sudo usermod -aG sudo <username> - gives other users root access

using visudo you can give users access to various permissions, has a makefile format
	example: <user> ALL=(ALL:ALL) /sbin/reboot,/sbin/shutdown gives <user> reboot and shutdown perms
	
-x = perm to run executable files
	order = rwx, --- means no perms
	
setting permissions onf iles and directories:
	object type -- user -- group -- world
			rw-	rw-	rw-
			rw-	r--	r--
			rwx	rwx	r-x
			
for directories:
	r = contents can be viewed
	w = contents of directory can be altered
	x = the user or group can use cd to go inside the dir
	
	
to remove permissions for directories and files example:
	chmod o-r /home/<user>/<file> 
	this removes read perms for other users other than group/self
	chmod o+r gives the perm back
	
Read: 4, Write: 2, Execute: 1
example:
	600: user has read + write equiv to -rw-------

chmod 770 -R <directory> - changes to all the files and directories underneath to 770

chown command to change ownership or give access to an object
example:
	sudo chown <user>:<group>:<etc> <file>
	(does not need more than <user>)
	chgrp works as well as a replacement for chown
	

Chapter 3: Managing Software Packages (incomplete)

sudo apt update - updates package sources
sudo apt remove <package> 
	--purge to wipe configuration

which - command to find the location of the binary file for comands that are available
	if not avail, no output
	
to update a package, use refresh:
	sudo snap refresh <package>
	
look up packages on http://packages.ubuntu.com/

apt advanced package tool - suite of tools that allows us to install, remove, and update Deb packages

running sudo apt update after handling/dealing with packages is good practice

ppa personal package archive - another form of apt repository


Chapter 4: Navigating and Essential Commands

head/tail <file> - shows first ten or last ten lines respectively
	-n <number> to vary lines
	-f displays new lines as they are appended, real time
	

Chapter 5: Managing Files and Directories

:sp to split the screen (vim)

standard output
	cat /var/log/syslog > /logfile.txt - redirects standard output of syslog into logfile.txt
	>> to append and not overwrite
	
file descriptors:
	0 standard input
	1 standard output
	2 standard error
	
/dev/null is a special device where things disappear forever
	find / name "syslog" 2> /def/null
	
find / -name "syslog" 1> stdout.txt 2> stderr.txt
	redirecting successful output to stdout.txt and errors to stderr.txt.
	
creating links - ln file1 file3
		 ls -i  to look at what are linked to each other using the inode number
		 

Chapter 6: Boosting Command-Line Efficiency

Typing in history shows commands used previously
	!<number> to run again
	history -d <num> - to delete an instance
	
!! - last command used
sudo !! - for root priv

ctrl+a - moves cursor to beginning of line
ctrl+e - moves cursor to the end of the line
ctrl+l - clears the screen
ctrl+k - deletes chars from the cursor to the end of the line
ctrl+u - deletes everything you've typed on that line (also works to clear text while entering a pass
ctrl+x+e - for long commands that need changes, opens a text editor for the command line
chain commands with &&
; executes second command regardless of result from the first command
alias install="sudo apt install" - nice shortcut
alias mem10='ps -L aux | sort -nr -k 4 | head -10' - view top ten ram consuming processes

Bash Script that backups for u:
#/bin/bash
CURDATE=$(date +%m-%d-%Y)
if [ ! -f /usr/bin/rsync ]; then 
    sudo apt install -y rsync 
fi
rsync -avb --delete --backup-dir=/backup/incremental/$CURDATE /src /target 

Chapter 7: Controlling and Managing Processes

ps - shows a list of processes run by user who calls
	ps -a - shows add info
	TTY - teletypewriter which is a terminal that grabs input (keyb)
	ps au - even more info
	ps aux - even MORE info
	
Changing priority of processes

ps -l to look at niceness and priorities
renice -n 10 -p 41267 - give niceness 10 to pid 41267
	lowest -20, highest 19? - lower the higher prio
nice -n 10 vim - default is 10
sudo kill 31258 

Signals:
	SIGHUP - tells processes that their controlling terminal has exited
	SIGHINT - Stop application running in the foreground
	SIGTERM(15) - asks a process to terminate cleanly
	SIGKILL(9) - forces process to terminate uncleanly
killall - kill processes by name
		 
Chapter 10: Connecting to Networks

sudo hostnamectl set-hostname <hostname> - changes hostname
sudo ip link set enp0s3 down/up - preventing from connecting to networks / connecting to net
	en for ethernet, wl for wireless
	p references which bus is being used, p0 refers to the first bus
	s3 references the PCI slot (3)
	
view /etc/netplan directory to see how .yaml files are formatted
if dhcp4 is true, this means that ip addresses are dynamically allocated, generally we want a static ip 
ip address should be selected not from the range broadcasted
sudo netplan apply - to apply changes 
ctrl+b + d to exit tmux, tmux a to reattach

ethernet interfaces now start with en, not eth ? 
wireless interfaces start with wl
ifconfig -a to see what connections you are dealing with 

systemd-resolve --status |grep DNS\ Servers - used to show DNS servers

sudo ss -tunlp |grep ssh - lists listening ports

ssh-keygen - generates an ssh key-pair
	-p to change passphrase
ssh-copy-id -i ~/.ssh.id_rsa.pub 192.168.1.150 - transmitting public key to target server 
/home/<user>/.ssh/config - file that simplifies ssh process, see commandline for format


Chapter 11: Setting Up Network Services:

ip addr show - shows ip address duh

CIDR = Classless Inter-Domain Routing which is the number of ip addresses available
	/32 = 1
	/24 = 254
	/16 = 65,534
	/8 = 16,777,214
	
sunny subnetting table

subnet      : 1   2   4   8   16   32   64   128   256
Host        : 256 128 64  32  16   8    4    2     1
Subnet Mask : /24 /25 /26 /27 /28  /29  /30  /31   /32

we use the column associated with the number of subnets that we want
Usable hosts are -2 of total hosts because first is resd for network id and last is for broadcast id
Network id starts with ip and the last number would be the # of hosts : <hosts> * 2n from n = 0
broadcast id would be the last id so if it ranges from 0 - 63, it would be 63 + 64 and so on
	
		 
Chapter 15: Automating Server Configuration with Ansible

Don't need to have an inventory file if stored on git, all servers would just pull from git
sudo apt install git if not already installed
sudo apt install ansible
1.) /etc/sudoers.d/<users>
2.) place "ansible ALL(ALL) NOPASSWD: ALL" inside <users> file
3.) sudo chown root:root /etc/sudoers.d/ansible - make file owned by root
4.) sudo chmod 440 /etc/sudoers.d/ansible - adjust permissions of the files
5.) sudo su - <user> and test ssh ip sudo ls /etc - to very if it works

Setting up inventory file:
1.) sudo touch /etc/ansible/hosts
2.) chown ansible /etc/ansible/hosts - only the user can read it
3.) chmod 600 /etc/ansible/hosts
4.) Put server IPs inside hosts files row by row
5.) ansible all -m ping - to test if set up correctly

Configuring client servers:
1.) create file packages.yml - look at ubuntu command line for reference on format
	a.) --- part of yaml format
	b.) - hosts: all - heading
	c.) become: true - ansible term for describing sudo, so that commands go through
	d.) - name: Install htop - shows up in logs, should always include, kind of like printfing?
	e.) apt: - for managing packages
2.) run by - ansible-playbook packages.yml



Chapter 21: Securing Your Server

port 22 most common port for hackers to try to hack so change it to something else.
to specify port : ssh -p 65332 <myhost>
	scp use -P
AllowUsers <user0> <user1> .. - allows users to access server via ssh
set password authentication to no after setting up a public key






	
